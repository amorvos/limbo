// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, Limbo, limbo, server,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  server = require('./server');

  EventEmitter = require('events').EventEmitter;

  Limbo = (function(_super) {
    __extends(Limbo, _super);

    function Limbo() {
      this._providers = {};
      this._providerName = 'mongo';
    }

    Limbo.prototype.use = function(group) {
      var Provider, provider;
      if (this._providers[group]) {
        return this._providers[group];
      }
      Provider = require("./providers/" + this._providerName);
      provider = new Provider(group);
      this._providers[group] = provider;
      return provider;
    };

    Limbo.prototype.provider = function(_providerName) {
      this._providerName = _providerName;
      return this;
    };

    Limbo.prototype.bind = function() {
      server.bind.apply(server, arguments);
      return this;
    };

    return Limbo;

  })(EventEmitter);

  limbo = new Limbo;

  limbo.Limbo = Limbo;

  module.exports = limbo;

}).call(this);
