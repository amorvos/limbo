// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, Limbo, Proxy, limbo, server,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  server = require('./server');

  EventEmitter = require('events').EventEmitter;

  Limbo = (function(_super) {
    __extends(Limbo, _super);

    function Limbo() {
      this._providers = {};
    }

    Limbo.prototype.use = function(group) {
      if (!this._providers[group]) {
        this._providers[group] = new Proxy(group);
      }
      return this._providers[group];
    };

    return Limbo;

  })(EventEmitter);

  limbo = new Limbo;

  limbo.Limbo = Limbo;

  module.exports = limbo;

  Proxy = (function() {
    function Proxy(_groupName) {
      this._groupName = _groupName;
    }

    Proxy.prototype.connect = function(url, callback) {
      var Provider, providerName;
      providerName = /^tcp/.test(url) ? 'rpc' : 'mongo';
      Provider = require("./providers/" + providerName);
      this.__proto__ = Provider.prototype;
      Provider.call(this, this._groupName);
      return this.connect(url, callback);
    };

    return Proxy;

  })();

}).call(this);
