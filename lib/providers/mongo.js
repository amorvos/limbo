// Generated by CoffeeScript 1.7.1
(function() {
  var Manager, Mongo, mongoose;

  mongoose = require('mongoose');

  Manager = (function() {
    function Manager(model) {
      var foo, method;
      this.model = model;
      for (method in model) {
        foo = model[method];
        if (typeof foo === 'function' && (this[method] == null)) {
          (function(_this) {
            return (function(method, foo) {
              return _this[method] = function() {
                return foo.apply(model, arguments);
              };
            });
          })(this)(method, foo);
        }
      }
    }

    return Manager;

  })();

  Mongo = (function() {
    function Mongo(_group) {
      this._group = _group;
      this._Manager = Manager;
      this._isConnected = false;
    }

    Mongo.prototype.connect = function(dsn) {
      if (!this._isConnected) {
        this.mongoose = mongoose.createConnection(dsn);
        this._isConnected = true;
      }
      return this;
    };

    Mongo.prototype.load = function(modelName, schema) {
      var _modelName;
      if (arguments.length === 1) {
        for (_modelName in modelName) {
          schema = modelName[_modelName];
          this._loadManager(_modelName, schema);
        }
      } else {
        this._loadManager(modelName, schema);
      }
      return this;
    };

    Mongo.prototype._loadManager = function(modelName, schema) {
      var model;
      if (typeof schema === 'function') {
        schema = schema(mongoose.Schema);
      }
      model = this.mongoose.model(modelName, schema);
      this[modelName.toLowerCase()] = new this._Manager(model);
      return this;
    };

    Mongo.prototype.manager = function(_Manager) {
      this._Manager = _Manager;
      return this;
    };

    return Mongo;

  })();

  module.exports = Mongo;

}).call(this);
